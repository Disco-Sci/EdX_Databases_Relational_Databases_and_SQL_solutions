/*
Question: 1
Problem: Find the names of all students who are friends with someone named Gabriel.
Solution: 

select hsID1.name
from friend, highschooler hsID1, highschooler hsID2
where friend.ID1 = hsID1.ID
and friend.ID2 = hsID2.ID
and hsID2.name = 'Gabriel'

*/

/*
Question: 2
Problem: For every student who likes someone 2 or more grades younger than themselves, return that student's name and grade, and the name and grade of the student they like.
Solution: 

select tbl1.name, tbl1.grade, tbl2.likes_name, tbl2.grade
from (
	select hs.ID, hs.name, hs.grade, likes.ID2
	from highschooler hs
	left join likes on hs.ID = likes.ID1
) tbl1
left join (
	select hs2.name likes_name, hs2.ID likes_ID, hs2.grade
	from highschooler hs2
	) tbl2 
	on tbl1.ID2 = tbl2.likes_ID
where likes_ID is not null and 
	tbl1.grade - tbl2.grade >= 2
  
select hs_1.name, hs_1.grade, hs_2.name, hs_2.grade
from likes, highschooler hs_1, highschooler hs_2
where likes.ID1 = hs_1.ID
and likes.ID2 = hs_2.ID 
and hs_1.grade - hs_2.grade >= 2

*/
/*
Question: 3
Problem: For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order.
Solution: 

select hs_1.name, hs_1.grade, hs_2.name, hs_2.grade
from likes li_1, highschooler hs_1, highschooler hs_2, likes li_2
where li_1.ID1 = hs_1.ID
and li_1.ID2 = hs_2.ID
and hs_2.ID = li_2.ID1
and hs_1.ID = li_2.ID2
and hs_1.name < hs_2.name
order by hs_1.name, hs_2.name


*/
/*
Question: 4
Problem: Find all students who do not appear in the Likes table (as a student who likes or is liked) and return their names and grades. Sort by grade, then by name within each grade.
Solution: 


select name, grade
from highschooler
where id not in (
	select ID1
	from likes
	union
	select ID2
	from likes
	)
order by grade, name
*/

/*
Question: 5
Problem: For every situation where student A likes student B, but we have no information about whom B likes (that is, B does not appear as an ID1 in the Likes table), return A and B's names and grades.
Solution: 

select hs_1.name, hs_1.grade, hs_2.name, hs_2.grade
from likes
join highschooler hs_1 on likes.ID1 = hs_1.ID
join highschooler hs_2 on likes.ID2 = hs_2.ID
where ID2 not in (
	select ID1
	from likes
	)
*/

/*
Question: 6
Problem: Find names and grades of students who only have friends in the same grade. Return the result sorted by grade, then by name within each grade.
Solution: 


select distinct hs1.name, hs1.grade
from friend f1, highschooler hs1, highschooler hs2
where
    f1.id1 = hs1.id and
    f1.id2 = hs2.id and 
    f1.id1 not in (
		select distinct f1.id1
		from friend f1, highschooler hs1, highschooler hs2
		where 
			f1.id1 = hs1.id and
			f1.id2 = hs2.id and 
			hs1.grade != hs2.grade )
order by hs1.grade, hs1.name


*/

/*
Question: 7
Problem: 
Solution: 

Refactored solution:

Relations are combined 
Subquery creates a single attribute relation to filter Likes.ID1 values on
Subquery removes all Likes.ID1 where concatenated Likes.ID1 and Likes.ID2 (both as is and inversed) values that matches to Friend rows 
Relations are then joined together on ID's such that a third person can know either Likes.ID's

select hs1.name, hs1.grade, hs2.name, hs2.grade, hs3.name, hs3.grade
from likes l, friend f1, friend f2, highschooler hs1, highschooler hs2, highschooler hs3
where
	l.id1 not in (
		select distinct l.id1
		from likes l, friend f
		where 
			( 
			(l.id1 || l.id2) in ( (f.id1 || f.id2) ) or
			(l.id2 || l.id1) in ( f.id1 || f.id2)  
			)
		)
    and 
    l.id1 = f1.id1  and
    f1.id2 = f2.id1 and
    l.id2 = f2.id2 and
    l.id1 = hs1.id and
    l.id2 = hs2.id and
    f1.id2 = hs3.id
order by hs1.name
;

*/

/*
Question: 8
Problem: Find the difference between the number of students in the school and the number of different first names.
Solution: 

select count(hs.ID) - count(distinct hs.name)
from highschooler hs

*/
Question: 9
Problem: Find the name and grade of all students who are liked by more than one other student.
Solution: 

Script:
select hs.name, hs.grade
from (
	select ID2, count(ID2) total
	from likes
	group by ID2
	having total > 1
	) temp_tbl
join highschooler hs on hs.ID = temp_tbl.ID2



*/

